package com.logic.lexer;

import java.util.Objects;

/**
 * A tokenized representation of a character in the string input.
 * Generated by the {@link Tokenizer}.
 *
 * @param type  The type of the token
 * @param value The actual character value of the token
 * @param index The index of the token in the input string
 */
public record Token(TokenType type, char value, int index) {
    /**
     * Helper method to generate an arbitrary token, without an index.
     *
     * @param value The character of the token
     * @return The token generated from the character
     */
    public static Token of(char value) {
        return new Token(TokenType.valueOf(value), value, -1);
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    @Override
    public boolean equals(Object o) {
        if (!(o instanceof Token(TokenType type1, char value1, _))) return false;
        return value() == value1 && type() == type1;
    }

    @Override
    public int hashCode() {
        return Objects.hash(type(), value());
    }
}
